<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Our Projects on Datafortress.cloud</title><link>https://datafortress.cloud/de/project/</link><description>Recent content in Our Projects on Datafortress.cloud</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><managingEditor/><webMaster/><lastBuildDate>Thu, 12 Jul 2018 18:19:33 +0600</lastBuildDate><atom:link href="https://datafortress.cloud/de/project/index.xml" rel="self" type="application/rss+xml"/><item><title>Buchinger Wilhelmi Private Cloud</title><link>https://datafortress.cloud/de/project/buchinger-wilhelmi/</link><pubDate>Sat, 24 Sep 2022 14:48:03 +0600</pubDate><author/><guid>https://datafortress.cloud/de/project/buchinger-wilhelmi/</guid><description>
&lt;h2 id="zusammenfassung">Zusammenfassung&lt;/h2>
&lt;p>Aufbau einer sicheren und DSGVO-konformen privaten Cloud mit Data Warehouse und datengesteuerten Analysen/Modellen&lt;/p>
&lt;h2 id="stichpunkte">Stichpunkte&lt;/h2>
&lt;p>Kubernetes, K3s, Terraform, Linux, AWS, ETL Pipelines, OpenStack, Docker Swarm, HL7, Tensorflow, Elasticsearch, SQL, NoSQL, Prefect, Dask, CI/CD Pipelines, Machine Learning, Tensorflow, ArgoCD, Github Actions, Keycloak, Microservices, FastAPI&lt;/p>
&lt;h2 id="beschreibung">Beschreibung&lt;/h2>
&lt;p>Ziel des Projekts ist es, aus bestehenden und zukünftigen Daten eine Datenlandschaft aufzubauen, die dann genutzt werden kann, um Geschäftsprozesse besser zu verstehen und mithilfe von maschinellem Lernen automatisch datengestützte Empfehlungen und Entscheidungen zu treffen.&lt;/p>
&lt;p>Eine besondere Herausforderung war der Umgang mit sensiblen Patientendaten, weshalb die Anforderungen der Datenschutz-Grundverordnung (DSGVO) und des baden-württembergischen Krankenhaus-IT-Gesetzes erfüllt werden mussten.
Die erste Phase des Projekts bestand daher aus der Planung und engen Abstimmung mit mehreren Anwaltskanzleien, um die Vorgaben der Krankenhausgesetze zu erarbeiten und zu planen.&lt;/p>
&lt;p>Die ursprüngliche Architektur war serverless auf AWS aufgebaut, wurde dann aber aufgrund der gesetzlichen Vorgaben für medizinische Daten auf Kubernetes umgestellt. Hohe Datensicherheit war eine Anforderung, da hochsensible medizinische Daten verwendet und analysiert werden, was eine ISO-Zertifizierung und die Verwaltung von HL7-Daten erfordert.
Ich habe dann einen BareMetal-Kubernetes-Cluster auf der Hetzner Cloud mit K3s, Terraform und MicroOS eingerichtet, der automatisch horizontal skaliert, die Last ausgleicht und automatisch Zertifikate erstellt (&lt;a href="https://github.com/kube-hetzner/terraform-hcloud-kube-hetzner)">https://github.com/kube-hetzner/terraform-hcloud-kube-hetzner)&lt;/a>. Der Cluster und das Deployment werden kontinuierlich überwacht und Fehler automatisch behoben. Neben den Sicherheitsaspekten können wir damit auch 90 % der Kosten im Vergleich zu AWS EKS einsparen.&lt;/p>
&lt;p>Im Bereich der Analytik haben wir ein Dashboard für NoSQL- und SQL-Daten sowie ETL-Pipelines zur Erstellung eines Data Warehouse erstellt.&lt;/p>
&lt;p>Beim maschinellen Lernen bestand ein Ziel darin, hoch skalierbare Modelle in der Cloud auszuführen, um Entscheidungen zu treffen und Kunden und App-Nutzer in Millisekunden zu klassifizieren.&lt;/p>
&lt;p>Um die Customer Journey zu verbessern, wurde für jeden Kunden ein &amp;ldquo;Profil&amp;rdquo; erstellt, gefolgt von einer manuellen Analyse, einer Klassifizierung mithilfe von Data Science und einer Zwillings-Kundenanalyse.&lt;/p>
&lt;p>&lt;a href="https://datafortress.cloud/de/contact/">Arbeiten Sie an einem ähnlichen Projekt? Sind Sie an etwas Ähnlichem interessiert? Kontaktieren Sie uns jetzt für eine kostenlose 15-minütige Beratung.&lt;/a>&lt;/p></description></item><item><title>HPW &amp; BMW Cloud Migration</title><link>https://datafortress.cloud/de/project/hpe-bmw/</link><pubDate>Sat, 24 Sep 2022 14:48:03 +0600</pubDate><author/><guid>https://datafortress.cloud/de/project/hpe-bmw/</guid><description>
&lt;h2 id="zusammenfassung">Zusammenfassung&lt;/h2>
&lt;p>BMW plant, seine lokalen Daten in einer hybriden Cloud-Umgebung an 63 Standorten weltweit zu sichern. Zu diesem Zweck wurde HPE beauftragt, an einer hybriden Lösung zu arbeiten, die sowohl die eigenen Server vor Ort als auch die Public Cloud nutzt.&lt;/p>
&lt;h2 id="stichpunkte">Stichpunkte&lt;/h2>
&lt;p>Linux, VMWare, HP Server, Networking, AWS, GCP, Azure, S3, Kubernetes, Scality, Cohesity, veeam, veritas, tape libraries, AWS Direct Connect&lt;/p>
&lt;h2 id="beschreibung">Beschreibung&lt;/h2>
&lt;p>Ich wurde von HPE für das BMW-Projekt angeheuert, um HPE im Bereich Public Cloud zu unterstützen.
Leider kann ich aufgrund des NDA keine Details nennen, aber
HPE wird die eigenen Server vor Ort nutzen, um eine lokale Kopie der Daten zwischenzuspeichern, aber dann über direkte Verbindungen zur Public Cloud in Bezug auf verschiedene Speicherklassen werden die Daten dedupliziert in mehreren Public Clouds gespeichert. Das gesamte System wird kontinuierlich überwacht und mit Hilfe von Scheduling-Tools gestartet. Für dieses Projekt war eine Menge an kundenspezifischer Linux-Programmierung erforderlich.&lt;/p>
&lt;p>&lt;a href="https://datafortress.cloud/de/contact/">Arbeiten Sie an einem ähnlichen Projekt? Sind Sie an etwas Ähnlichem interessiert? Kontaktieren Sie uns jetzt für eine kostenlose 15-minütige Beratung.&lt;/a>&lt;/p></description></item><item><title>Jim Harris Real Time Stock Analytics</title><link>https://datafortress.cloud/de/project/jim-harris-corp/</link><pubDate>Sat, 24 Sep 2022 14:48:03 +0600</pubDate><author/><guid>https://datafortress.cloud/de/project/jim-harris-corp/</guid><description>
&lt;h2 id="zusammenfassung">Zusammenfassung&lt;/h2>
&lt;p>Australische Aktienmarktvorhersage innerhalb von 5 Sekunden.
Speicherung von Börsentickdaten und Aktienkursprognose.&lt;/p>
&lt;h2 id="stichpunkte">Stichpunkte&lt;/h2>
&lt;p>AWS, ETL Pipelines, Tensorflow, Elasticsearch, NoSQL, Apache Kafka, Apache Flink, Python, Message Queues, Microservices (Lambda), Docker, Dask&lt;/p>
&lt;h2 id="beschreibung">Beschreibung&lt;/h2>
&lt;p>Das Ziel war es, Livestreams von Tick-Börsendaten in Millisekunden zu verarbeiten und Entscheidungen über Handelsstrategien zu treffen. Im weiteren Verlauf wurde ein automatisierter Handelsbot entwickelt, der auf Basis von maschinellem Lernen Kaufentscheidungen trifft.&lt;/p>
&lt;p>Im Detail wurden ~120 Tickdaten/Sekunde verarbeitet, die an Apache Kafka (mittlerweile Flink) gesendet und dann von selbstskalierenden Microservices (AWS Lambda) verarbeitet wurden. Das Modell selbst wurde mit OpenFAAS in einem Docker Swarm-Cluster gehostet und führte Kaufentscheidungen über benutzerdefinierte APIs für ASX aus.&lt;/p>
&lt;p>&lt;a href="https://datafortress.cloud/de/contact/">Arbeiten Sie an einem ähnlichen Projekt? Sind Sie an etwas Ähnlichem interessiert? Kontaktieren Sie uns jetzt für eine kostenlose 15-minütige Beratung.&lt;/a>&lt;/p></description></item><item><title>OttoAI Machine Learning (NLP) SAAS</title><link>https://datafortress.cloud/de/project/otto-ai/</link><pubDate>Sat, 24 Sep 2022 14:48:03 +0600</pubDate><author/><guid>https://datafortress.cloud/de/project/otto-ai/</guid><description>
&lt;h2 id="zusammenfassung">Zusammenfassung&lt;/h2>
&lt;p>Entwicklung einer Software, die Informationen über potenzielle Kontakte aus verschiedenen Quellen sammelt, mit Hilfe von NLP eine personalisierte Nachricht generiert und die Kontakte dann automatisch über LinkedIn anschreibt.&lt;/p>
&lt;h2 id="stichpunkte">Stichpunkte&lt;/h2>
&lt;p>AWS, Docker, Python, NLP Machine Learning, Webscraper, Autoscaling, Terraform, AWS CloudFormation, CI/CD Pipelines&lt;/p>
&lt;h2 id="beschreibung">Beschreibung&lt;/h2>
&lt;p>Ziel des Projekts ist es, eine Cloud-Architektur und Software zu entwickeln, die Informationen über potenzielle Kunden sammelt und sie mit einer sehr personalisierten Nachricht auf LinkedIn anschreibt.&lt;/p>
&lt;p>Zu diesem Zweck wurde zunächst ein Web Scraper eingerichtet, der LinkedIn, Twitter und Google nach Informationen über den potenziellen Kontakt durchsucht und diese Informationen mithilfe von maschinellem NLP-Lernen interpretiert und eine &amp;ldquo;Datei&amp;rdquo; pro Kunde erstellt.&lt;/p>
&lt;p>Anschließend wird mithilfe eines anderen NLP-Modells ein personalisiertes Anschreiben generiert, und ein weiterer Selenium-Python-Bot wird verwendet, um die Nachricht über LinkedIn an den Kunden zu senden.&lt;/p>
&lt;p>Da die Software und die Modelle Tausende von Anfragen innerhalb weniger Sekunden verarbeiten müssen, war es notwendig, eine autoskalierende und schnelle Architektur mit Docker und AWS ECS zu entwickeln, die gleichzeitig nicht zu viele Kosten durch GPU-Instanzen auf AWS verursacht. Die endgültige Architektur ist eine Mischung aus Docker-Microservices und Spot-Instanzen, die die GPU-Docker-Images bei Bedarf hosten.&lt;/p>
&lt;p>&lt;a href="https://datafortress.cloud/de/contact/">Arbeiten Sie an einem ähnlichen Projekt? Sind Sie an etwas Ähnlichem interessiert? Kontaktieren Sie uns jetzt für eine kostenlose 15-minütige Beratung.&lt;/a>&lt;/p></description></item><item><title>Porsche Holding Data Science</title><link>https://datafortress.cloud/de/project/porsche-holding/</link><pubDate>Sat, 24 Sep 2022 14:48:03 +0600</pubDate><author/><guid>https://datafortress.cloud/de/project/porsche-holding/</guid><description>
&lt;h2 id="zusammenfassung">Zusammenfassung&lt;/h2>
&lt;p>Aufbau von Data Warehouse und datengesteuerten Analysen/Modellen&lt;/p>
&lt;h2 id="stichpunkte">Stichpunkte&lt;/h2>
&lt;p>AWS, MS Azure, ETL Pipelines, Tensorflow, Elasticsearch, SQL, NoSQL, Kafka, Python&lt;/p>
&lt;h2 id="beschreibung">Beschreibung&lt;/h2>
&lt;p>Ziel war es, verschiedene NoSQL- und SQL-Datenbanken in einem zentralen Data Warehouse und Data Lake zusammenzuführen.
Die Daten mussten sowohl über Batch-Jobs in einem nächtlichen Prozess als auch &amp;ldquo;live&amp;rdquo; über Streaming mit Kafka von verschiedenen Endgeräten gesammelt werden.&lt;/p>
&lt;p>Eine besondere Anforderung des Projektes war, dass große Datenmengen zu verwalten waren (20+ Millionen Web-Events / Monat, 2 TB/Monat), sowie die Sicherheitsstandards der Volkswagen AG eingehalten werden mussten. Daneben war ich auch massiv an der Umsetzung der DSGVO-Standards beteiligt, sowie mit dem konzernweiten &amp;ldquo;Team Cloud&amp;rdquo; der Volkswagen AG am Ausbau der Cloud-Infrastruktur mit AWS und MS Azure.&lt;/p>
&lt;p>Für den Einsatz in Apps und auf Webseiten wurden verschiedene Recommender-Systeme entwickelt, die das perfekte Fahrzeug für einen Nutzer anzeigen sollen. Diese wurden auf einfache Weise mit Graphen in Elasticsearch und in komplexeren Szenarien mit vorberechneten Clustern oder Machine-Learning-Modellen umgesetzt, die mit OpenFAAS und Kubernetes ausgespielt wurden.&lt;/p>
&lt;p>Darüber hinaus wurden Machine-Learning-Modelle für die Vorhersage von Stückzahlen, Beständen und (Fahrzeug-)Kennzeichen entwickelt.&lt;/p>
&lt;p>&lt;a href="https://datafortress.cloud/de/contact/">Arbeiten Sie an einem ähnlichen Projekt? Sind Sie an etwas Ähnlichem interessiert? Kontaktieren Sie uns jetzt für eine kostenlose 15-minütige Beratung.&lt;/a>&lt;/p></description></item><item><title>SUMM AI serverless AWS architecture</title><link>https://datafortress.cloud/de/project/summ-ai/</link><pubDate>Sat, 24 Sep 2022 14:48:03 +0600</pubDate><author/><guid>https://datafortress.cloud/de/project/summ-ai/</guid><description>
&lt;h2 id="zusammenfassung">Zusammenfassung&lt;/h2>
&lt;p>KI-Startup, das Sprache mit Transformer MLP-Modellen vereinfacht
&lt;a href="https://summ-ai.com/">https://summ-ai.com/&lt;/a>
Umwandlung einer bestehenden MariaDB-, Django- und ML-Architektur in eine serverlose AWS-Architektur.&lt;/p>
&lt;h2 id="stichpunkte">Stichpunkte&lt;/h2>
&lt;p>AWS, ETL Pipelines, Tensorflow, SQL, Django, Docker, AWS ECS, AWS Security, AWS API Gateway&lt;/p>
&lt;h2 id="beschreibung">Beschreibung&lt;/h2>
&lt;p>Ziel war es, die bestehende Python/MariaDB/ML-Architektur in ein serverloses Format zu konvertieren und sie automatisch skalierend und sicher zu AWS zu übertragen.
Die bestehende Architektur war nicht sicher und ließ sich nicht skalieren. Die einzelnen Komponenten wurden isoliert, in Docker-Images verpackt und in privaten VPCs mit AWS ECS und API Gateway bereitgestellt, um maximale Sicherheit der &amp;ldquo;geheimen&amp;rdquo; Modelle zu gewährleisten. Die Architektur wurde in Terraform geschrieben und wird über eine CI/CD-Pipeline mit Github-Aktionen bereitgestellt. Die Architektur entspricht der AWS-Spezifikation &amp;ldquo;well-architected&amp;rdquo;.&lt;/p>
&lt;p>&lt;a href="https://datafortress.cloud/de/contact/">Arbeiten Sie an einem ähnlichen Projekt? Sind Sie an etwas Ähnlichem interessiert? Kontaktieren Sie uns jetzt für eine kostenlose 15-minütige Beratung.&lt;/a>&lt;/p></description></item><item><title>#unraceable Virtual Reality Simulator</title><link>https://datafortress.cloud/de/project/unraceable-virtual-reality-simulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author/><guid>https://datafortress.cloud/de/project/unraceable-virtual-reality-simulator/</guid><description>
&lt;p>Unraceable ist der Name eines &lt;strong>Virtual-Reality-Motionseat&lt;/strong>-Projekts und einer &lt;strong>App&lt;/strong>, das ich drei Jahre lang geleitet habe.&lt;br>
Die Idee war, Ausstellungsräume zu verbessern und etwas zu schaffen, das den Menschen ein emotionales Erlebnis bietet.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Der Hauptkampagnenspot von &amp;ldquo;Audi #unraceable&amp;rdquo;&lt;/p>
&lt;p>Die Anforderung sollte eine Verbesserung der &amp;ldquo;Audi Sandbox&amp;rdquo; sein, die von Audi Norwegen produziert wurde, wie Sie im folgenden Video sehen können.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="the-challenge">THE CHALLENGE&lt;/h2>
&lt;p>Ter erste Meilenstein des Produkts hatte einen strengen Zeitplan und verlangte, dass die Kunden ihre Rennstrecke in einer Sandbox bauen, die dann gescannt und schließlich auf einen Virtual-Reality-Bewegungssitz übertragen wird.&lt;br>
Die &amp;ldquo;Audi Sandbox&amp;rdquo; hatte das Problem, dass sie keinen Bewegungssitz enthielt und der &amp;ldquo;Scan&amp;rdquo;-Prozess größtenteils manuell war und viel Zeit in Anspruch nahm. Da das Projekt auf einer Messe präsentiert werden sollte, durfte der Scanvorgang nur maximal ein paar Minuten dauern, d.h. es musste ein neuer automatisierter Weg gefunden werden, um diese Strecke zu erstellen.&lt;/p>
&lt;h2 id="the-strategy">THE STRATEGY&lt;/h2>
&lt;p>Für das Projekt haben wir mit einem Partner zusammengearbeitet und mit verschiedenen Möglichkeiten experimentiert, um diese Idee in die Realität umzusetzen. Für das Scannen wurde eine Xbox Kinect gewählt, da sie sowohl Tiefenbilder (3D-Topografie) als auch das farbige 2D-Bild der Strecke scannen kann. Mit diesen Informationen konnte in Sekundenschnelle eine Karte erstellt werden (was die Komplexität in Bezug auf die Zeit reduzierte), und zusammen mit dem Scannen von Objekten aus den 2D-Bilddaten konnten Objekte auch auf der 3D-Karte platziert werden.&lt;/p>
&lt;p>Um den Teil des Bewegungssitzes zu erfüllen, prüften wir mehrere Lösungen und entschieden uns schließlich für einen in der Tschechischen Republik hergestellten 6 DOF Bewegungssimulator. Da er nicht mit Virtual Reality ausgestattet war, musste die VR-Technologie nachgerüstet werden.&lt;br>
Dies stellt ein großes Problem dar, da herkömmliche Tracker durch die Bewegung des Sitzes irritiert werden, da sie nicht unterscheiden können, ob sich der Kopf oder der Sitz bewegt. Es musste eine maßgeschneiderte Lösung gefunden werden, bei der ein weiterer Tracker am Sitz angebracht wurde und der Abstand zwischen Sitz, Basisstation und VR-Brille in Echtzeit berechnet wurde. Als VR-Brille wurde die HTC Vive gewählt, da sie zu diesem Zeitpunkt die beste Auflösung bot. Ein großes Problem bei VR ist jedoch die Verzögerung. Wenn die Berechnungen der Szene zu lange dauern und das Bild leicht verzögert auf die Bewegung des Sitzes reagiert, fühlen sich Menschen bewegungsunfähig. Dieses Phänomen wird oft als &amp;ldquo;&lt;a href="https://en.wikipedia.org/wiki/Virtual_reality_sickness?oldformat=true">virtual reality sickness&lt;/a>&amp;rdquo; oder &amp;ldquo;&lt;a href="https://en.wikipedia.org/wiki/Virtual_reality_sickness?oldformat=true">cybersickness&lt;/a>&amp;rdquo; bezeichnet. In den nächsten Schritten wurden daher verschiedene Techniken zur Verringerung der Bewegungskrankheit ausprobiert.&lt;br>
#unraceable wurde in mehreren Magazinen vorgestellt und trat sogar bei &amp;ldquo;Austria&amp;rsquo;s Next Topmodel&amp;rdquo; als Herausforderung auf.&lt;/p>
&lt;p>Auf der letzten Messe war #unraceable ein großer Erfolg und bot die Produktion mehrerer weiterer Meilensteine.&lt;br>
Im darauffolgenden Jahr trat er sogar in einer modifizierten Version bei der weltweiten &amp;ldquo;Formel E&amp;rdquo; auf und reiste zusammen mit dem Team &amp;ldquo;Audi Sport ABT&amp;rdquo; um den Globus.&lt;/p>
&lt;p>&lt;img src="https://datafortress.cloud/images/img_1286-768x576.webp" alt="">&lt;/p>
&lt;h5 id="milestone-2-unraceable-app-and-quattro-challenge">Milestone 2: #unraceable App and Quattro-Challenge&lt;/h5>
&lt;p>Der bisherige Erfolg erlaubte es, das Projekt weiterzuentwickeln und eine App zu produzieren, die eine breitere Masse erreichen sollte. Die Idee war, dass vier Skistars (Quattro, wie der &amp;ldquo;Audi Quattro&amp;rdquo;) jeweils eine Strecke bauen sollten, die dann von Spielern rund um den Globus befahren werden sollte, wobei der endgültige Gewinner einen Audi A1 für ein Jahr gewinnen sollte.&lt;/p>
&lt;p>&lt;img src="https://datafortress.cloud/images/9f01d087dae1e9abb8a2f8c125c7329a-768x555.webp" alt="">&lt;/p>
&lt;p>Die Strecke sollte sowohl im Simulator als auch in der App selbst spielbar sein. Um dies zu erreichen, waren mehrere Änderungen erforderlich, insbesondere die Portierung eines hochwertigen VR-Spiels auf ein mobiles Spiel, das nur begrenzte Ressourcen zulässt. Es mussten mehrere Anti-Cheat-Mechanismen implementiert und neue Herausforderungen im Bereich des Datenschutzes gelöst werden. Am Ende wurde die App mehr als 30'000 Mal heruntergeladen und erreichte eine Bewertung von 4,3/5 Sternen.&lt;br>
Da ein Link zum Autokonfigurator von Audi in das Spiel integriert wurde, konnte eine enorme Konversionsrate erzielt werden, da fast 50% der Spieler den Autokonfigurator mindestens einmal öffneten.&lt;/p>
&lt;p>&lt;img src="https://datafortress.cloud/images/img_3777-768x432.webp" alt="">&lt;/p>
&lt;p>&lt;a href="https://www.audi.at/audi-erleben/unraceable">Link: Download the App&lt;/a>&lt;/p>
&lt;h5 id="milestone-3-unraceable-ski-challenge">Milestone 3: #unraceable Ski-Challenge&lt;/h5>
&lt;p>Der nächste Schritt bestand darin, mit dem Österreichischen Skiverband (&lt;a href="https://www.oesv.at/" title="https://www.oesv.at/">https://www.oesv.at/&lt;/a>) zusammenzuarbeiten und etwas Ähnliches wie die frühere &amp;ldquo;Skiing Challenge&amp;rdquo; aufzubauen, die in den vergangenen Jahren großen Erfolg hatte. Die Aufgabe bestand jedoch darin, nicht einfach an diesen Erfolg anzuknüpfen, sondern etwas Neues zu schaffen. Die Idee war, mit einem Audi e-Tron die Skipiste (Hahnenkamm) hinaufzufahren (in Anlehnung an den damaligen Audi e-Tron-Spot, in dem er wie im ersten &amp;ldquo;Quattro&amp;rdquo;-Spot eine Skipiste hinauffährt) und sie dann mit einem Skifahrer wieder hinunterzufahren. Auch hier wurde die App mehr als 30'000 Mal heruntergeladen und wird auch heute noch gespielt.&lt;/p>
&lt;h6 id="spot-ferdinand-habsburg--ernst-hausleitner-orf">Spot: Ferdinand Habsburg &amp;amp; Ernst Hausleitner (ORF)&lt;/h6>
&lt;!-- raw HTML omitted -->
&lt;h6 id="fc-bayern-münchen-spot">“FC Bayern München” Spot&lt;/h6>
&lt;!-- raw HTML omitted -->
&lt;h6 id="unraceable-ski-challenge-featuring-hans-knauß">#unraceable Ski Challenge featuring Hans Knauß&lt;/h6>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;a href="https://datafortress.cloud/de/contact/">Arbeiten Sie an einem ähnlichen Projekt? Sind Sie an etwas Ähnlichem interessiert? Kontaktieren Sie uns jetzt für eine kostenlose 15-minütige Beratung.&lt;/a>&lt;/p></description></item></channel></rss>